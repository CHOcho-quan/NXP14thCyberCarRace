###############################################################################
#
# IAR ANSI C/C++ Compiler V8.20.1.14183/W32 for ARM       09/Jul/2019  18:06:22
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\IARworkspace\CamCar_IAR\source\Mag.c
#    Command line =  
#        -f C:\Users\57416\AppData\Local\Temp\EW502B.tmp
#        (E:\IARworkspace\CamCar_IAR\source\Mag.c -lCN
#        E:\IARworkspace\CamCar_IAR\FLASH\List -lB
#        E:\IARworkspace\CamCar_IAR\FLASH\List -o
#        E:\IARworkspace\CamCar_IAR\FLASH\Obj --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4 -e --char_is_signed --fpu=None
#        --dlib_config "D:\Program
#        Files(x86)\IAR\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\IARworkspace\CamCar_IAR\source\ -I
#        E:\IARworkspace\CamCar_IAR\common\ -I E:\IARworkspace\CamCar_IAR\LPLD\
#        -I E:\IARworkspace\CamCar_IAR\LPLD\HW\ -I
#        E:\IARworkspace\CamCar_IAR\LPLD\DEV\ -Ol -I "D:\Program
#        Files(x86)\IAR\arm\CMSIS\Include\" -D ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  E:\IARworkspace\CamCar_IAR\FLASH\List\Mag.lst
#    Object file  =  E:\IARworkspace\CamCar_IAR\FLASH\Obj\Mag.o
#
###############################################################################

E:\IARworkspace\CamCar_IAR\source\Mag.c
      1          /*
      2          Arthor : Qian Qiyang (KisaragiAyanoo@twitter)
      3          Date : 2015/12/01
      4          License : MIT
      5          */
      6          
      7          #include "includes.h"
      8          
      9          
     10          // ===== Global Variables =====

   \                                 In section .bss, align 4
     11          U16 mag_val[6];
   \                     mag_val:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
     12          int left_right = 0;
   \                     left_right:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
     13          boolean lost=0;
   \                     lost:
   \   00000000                      DS8 1
     14          extern int dir;
     15          
     16          /*
     17          0 @@@
     18          1 @@@@
     19          2 @@@
     20          3 @@@
     21          */

   \                                 In section .bss, align 4
     22          int huandao = 0;
   \                     huandao:
   \   00000000                      DS8 4
     23          

   \                                 In section .data, align 4
     24          float circle_dep_left=1.0, circle_dep_right=1.0;
   \                     circle_dep_left:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .data, align 4
   \                     circle_dep_right:
   \   00000000   0x3F800000         DC32 3F800000H
     25          
     26          // ===== Function Realization =====
     27          

   \                                 In section .text, align 2, keep-with-next
     28          void Mag_Sample(){
   \                     Mag_Sample: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     29            mag_val[0] = Mag1();
   \   00000002   0x.... 0x....      BL       Mag1
   \   00000006   0x.... 0x....      LDR.W    R1,??DataTable10
   \   0000000A   0x8008             STRH     R0,[R1, #+0]
     30            mag_val[1] = Mag2();
   \   0000000C   0x.... 0x....      BL       Mag2
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable10
   \   00000014   0x8048             STRH     R0,[R1, #+2]
     31            mag_val[2] = Mag3();
   \   00000016   0x.... 0x....      BL       Mag3
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable10
   \   0000001E   0x8088             STRH     R0,[R1, #+4]
     32            mag_val[3] = Mag4();
   \   00000020   0x.... 0x....      BL       Mag4
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable10
   \   00000028   0x80C8             STRH     R0,[R1, #+6]
     33            mag_val[5] = Mag6();
   \   0000002A   0x.... 0x....      BL       Mag6
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable10
   \   00000032   0x8148             STRH     R0,[R1, #+10]
     34            mag_val[4] = mag_val[5] - Mag5();
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable10
   \   00000038   0x8944             LDRH     R4,[R0, #+10]
   \   0000003A   0x.... 0x....      BL       Mag5
   \   0000003E   0x1A24             SUBS     R4,R4,R0
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable10
   \   00000044   0x8104             STRH     R4,[R0, #+8]
     35          }
   \   00000046   0xBD10             POP      {R4,PC}          ;; return
     36          

   \                                 In section .text, align 2, keep-with-next
     37          u16 Mag1(){
     38            ADC1->SC1[0] = ADC_SC1_ADCH(4);
   \                     Mag1: (+1)
   \   00000000   0x2004             MOVS     R0,#+4
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable10_1  ;; 0x400bb000
   \   00000006   0x6008             STR      R0,[R1, #+0]
     39            while((ADC1->SC1[0]&ADC_SC1_COCO_MASK)==0);
   \                     ??Mag1_0: (+1)
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable10_1  ;; 0x400bb000
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x0600             LSLS     R0,R0,#+24
   \   00000010   0xD5FA             BPL.N    ??Mag1_0
     40            return ADC1->R[0];
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable10_2  ;; 0x400bb010
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000001A   0x4770             BX       LR               ;; return
     41          }

   \                                 In section .text, align 2, keep-with-next
     42          u16 Mag2(){
     43            ADC1->SC1[0] = ADC_SC1_ADCH(5);
   \                     Mag2: (+1)
   \   00000000   0x2005             MOVS     R0,#+5
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable10_1  ;; 0x400bb000
   \   00000006   0x6008             STR      R0,[R1, #+0]
     44            while((ADC1->SC1[0]&ADC_SC1_COCO_MASK)==0);
   \                     ??Mag2_0: (+1)
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable10_1  ;; 0x400bb000
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x0600             LSLS     R0,R0,#+24
   \   00000010   0xD5FA             BPL.N    ??Mag2_0
     45            return ADC1->R[0];
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable10_2  ;; 0x400bb010
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000001A   0x4770             BX       LR               ;; return
     46          }

   \                                 In section .text, align 2, keep-with-next
     47          u16 Mag3(){
     48            ADC1->SC1[0] = ADC_SC1_ADCH(6);
   \                     Mag3: (+1)
   \   00000000   0x2006             MOVS     R0,#+6
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable10_1  ;; 0x400bb000
   \   00000006   0x6008             STR      R0,[R1, #+0]
     49            while((ADC1->SC1[0]&ADC_SC1_COCO_MASK)==0);
   \                     ??Mag3_0: (+1)
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable10_1  ;; 0x400bb000
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x0600             LSLS     R0,R0,#+24
   \   00000010   0xD5FA             BPL.N    ??Mag3_0
     50            return ADC1->R[0];
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable10_2  ;; 0x400bb010
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000001A   0x4770             BX       LR               ;; return
     51          }

   \                                 In section .text, align 2, keep-with-next
     52          u16 Mag4(){
     53            ADC1->SC1[0] = ADC_SC1_ADCH(7);
   \                     Mag4: (+1)
   \   00000000   0x2007             MOVS     R0,#+7
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable10_1  ;; 0x400bb000
   \   00000006   0x6008             STR      R0,[R1, #+0]
     54            while((ADC1->SC1[0]&ADC_SC1_COCO_MASK)==0);
   \                     ??Mag4_0: (+1)
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable10_1  ;; 0x400bb000
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x0600             LSLS     R0,R0,#+24
   \   00000010   0xD5FA             BPL.N    ??Mag4_0
     55            return ADC1->R[0];
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable10_2  ;; 0x400bb010
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000001A   0x4770             BX       LR               ;; return
     56          }

   \                                 In section .text, align 2, keep-with-next
     57          s16 Mag5(){
     58            ADC1->SC1[0] = ADC_SC1_DIFF_MASK | ADC_SC1_ADCH(3);
   \                     Mag5: (+1)
   \   00000000   0x2023             MOVS     R0,#+35
   \   00000002   0x....             LDR.N    R1,??DataTable10_1  ;; 0x400bb000
   \   00000004   0x6008             STR      R0,[R1, #+0]
     59            while((ADC1->SC1[0]&ADC_SC1_COCO_MASK)==0);
   \                     ??Mag5_0: (+1)
   \   00000006   0x....             LDR.N    R0,??DataTable10_1  ;; 0x400bb000
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x0600             LSLS     R0,R0,#+24
   \   0000000C   0xD5FB             BPL.N    ??Mag5_0
     60            return ADC1->R[0];
   \   0000000E   0x....             LDR.N    R0,??DataTable10_2  ;; 0x400bb010
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000014   0x4770             BX       LR               ;; return
     61            //ADC1->SC1[0] &= ~ADC_SC1_DIFF_MASK;
     62          }

   \                                 In section .text, align 2, keep-with-next
     63          u16 Mag6(){
     64            ADC1->SC1[0] = ADC_SC1_ADCH(3);
   \                     Mag6: (+1)
   \   00000000   0x2003             MOVS     R0,#+3
   \   00000002   0x....             LDR.N    R1,??DataTable10_1  ;; 0x400bb000
   \   00000004   0x6008             STR      R0,[R1, #+0]
     65            while((ADC1->SC1[0]&ADC_SC1_COCO_MASK)==0);
   \                     ??Mag6_0: (+1)
   \   00000006   0x....             LDR.N    R0,??DataTable10_1  ;; 0x400bb000
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x0600             LSLS     R0,R0,#+24
   \   0000000C   0xD5FB             BPL.N    ??Mag6_0
     66            return ADC1->R[0];
   \   0000000E   0x....             LDR.N    R0,??DataTable10_2  ;; 0x400bb010
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000014   0x4770             BX       LR               ;; return
     67          }
     68          

   \                                 In section .text, align 2, keep-with-next
     69          int Mag_Control(){
   \                     Mag_Control: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
     70            int f1,f2,f3;
     71            int dir, err_mag;
     72            static int last_err_mag = 0;
     73            static int hdCnt = 0;
     74            
     75            float pow = 0.0;
   \   00000002   0x2600             MOVS     R6,#+0
     76          
     77            f1 = mag_val[0] - mag_val[5];
   \   00000004   0x....             LDR.N    R0,??DataTable10
   \   00000006   0x8801             LDRH     R1,[R0, #+0]
   \   00000008   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000000A   0x....             LDR.N    R0,??DataTable10
   \   0000000C   0x8940             LDRH     R0,[R0, #+10]
   \   0000000E   0x1A08             SUBS     R0,R1,R0
     78            f2 = mag_val[1] - mag_val[4];
   \   00000010   0x....             LDR.N    R0,??DataTable10
   \   00000012   0x8841             LDRH     R1,[R0, #+2]
   \   00000014   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000016   0x....             LDR.N    R0,??DataTable10
   \   00000018   0x8900             LDRH     R0,[R0, #+8]
   \   0000001A   0x1A08             SUBS     R0,R1,R0
     79            f3 = mag_val[2] - mag_val[3];
   \   0000001C   0x....             LDR.N    R1,??DataTable10
   \   0000001E   0x8889             LDRH     R1,[R1, #+4]
   \   00000020   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000022   0x....             LDR.N    R2,??DataTable10
   \   00000024   0x88D7             LDRH     R7,[R2, #+6]
   \   00000026   0x1BCF             SUBS     R7,R1,R7
     80            
     81            /*
     82            if (mag_val[2] + mag_val[3] > 2500 && ((0 < f1 && f1 < 150) || (f1 < 0 && f1 > -150)))
     83            {
     84              // @@@@@
     85              hdCnt = f1;
     86              huandao = 1;
     87            }
     88            
     89            if (huandao == 1)
     90            {
     91              if (mag_val[2] + mag_val[3] < 1000) huandao = 2;
     92              else return (f1>0 ? 1:-1) * 200;
     93            }
     94            
     95            if (huandao == 2)
     96            {
     97              if (f1 > 500 || f1 < -500) huandao = 0;
     98            }
     99            
    100            if (mag_val[2] + mag_val[3] - mag_val[1] - mag_val[4] < 300)
    101            {
    102              pow = 1.3;
    103            }
    104            else 
    105            {
    106              pow = 0.8;
    107            }
    108            */
    109            err_mag = f2 * 0.2 + f3 * 0.3;
   \   00000028   0x.... 0x....      BL       __aeabi_i2d
   \   0000002C   0x....             LDR.N    R2,??DataTable10_3  ;; 0x9999999a
   \   0000002E   0x....             LDR.N    R3,??DataTable10_4  ;; 0x3fc99999
   \   00000030   0x.... 0x....      BL       __aeabi_dmul
   \   00000034   0x0004             MOVS     R4,R0
   \   00000036   0x000D             MOVS     R5,R1
   \   00000038   0x0038             MOVS     R0,R7
   \   0000003A   0x.... 0x....      BL       __aeabi_i2d
   \   0000003E   0xF05F 0x3233      MOVS     R2,#+858993459
   \   00000042   0x....             LDR.N    R3,??DataTable10_5  ;; 0x3fd33333
   \   00000044   0x.... 0x....      BL       __aeabi_dmul
   \   00000048   0x0022             MOVS     R2,R4
   \   0000004A   0x002B             MOVS     R3,R5
   \   0000004C   0x.... 0x....      BL       __aeabi_dadd
   \   00000050   0x.... 0x....      BL       __aeabi_d2iz
   \   00000054   0x0007             MOVS     R7,R0
    110            
    111            dir = err_mag * 1.2 + (err_mag - last_err_mag) * 0.4;
   \   00000056   0x0038             MOVS     R0,R7
   \   00000058   0x.... 0x....      BL       __aeabi_i2d
   \   0000005C   0xF05F 0x3233      MOVS     R2,#+858993459
   \   00000060   0x....             LDR.N    R3,??DataTable10_6  ;; 0x3ff33333
   \   00000062   0x.... 0x....      BL       __aeabi_dmul
   \   00000066   0x0004             MOVS     R4,R0
   \   00000068   0x000D             MOVS     R5,R1
   \   0000006A   0x....             LDR.N    R0,??DataTable10_7
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x1A38             SUBS     R0,R7,R0
   \   00000070   0x.... 0x....      BL       __aeabi_i2d
   \   00000074   0x....             LDR.N    R2,??DataTable10_3  ;; 0x9999999a
   \   00000076   0x....             LDR.N    R3,??DataTable10_8  ;; 0x3fd99999
   \   00000078   0x.... 0x....      BL       __aeabi_dmul
   \   0000007C   0x0022             MOVS     R2,R4
   \   0000007E   0x002B             MOVS     R3,R5
   \   00000080   0x.... 0x....      BL       __aeabi_dadd
   \   00000084   0x.... 0x....      BL       __aeabi_d2iz
    112            
    113            last_err_mag = err_mag;
   \   00000088   0x....             LDR.N    R1,??DataTable10_7
   \   0000008A   0x600F             STR      R7,[R1, #+0]
    114            
    115            if(dir<0)left_right = -1;
   \   0000008C   0x2800             CMP      R0,#+0
   \   0000008E   0xD503             BPL.N    ??Mag_Control_0
   \   00000090   0xF05F 0x31FF      MOVS     R1,#-1
   \   00000094   0x....             LDR.N    R2,??DataTable10_9
   \   00000096   0x6011             STR      R1,[R2, #+0]
    116            if(dir>0)left_right = 1;
   \                     ??Mag_Control_0: (+1)
   \   00000098   0x2801             CMP      R0,#+1
   \   0000009A   0xDB02             BLT.N    ??Mag_Control_1
   \   0000009C   0x2101             MOVS     R1,#+1
   \   0000009E   0x....             LDR.N    R2,??DataTable10_9
   \   000000A0   0x6011             STR      R1,[R2, #+0]
    117            if(mag_val[2]<200 && mag_val[3]<200 && mag_val[1]<650 && mag_val[4]<650){dir = left_right*800;lost=1;}
   \                     ??Mag_Control_1: (+1)
   \   000000A2   0x....             LDR.N    R1,??DataTable10
   \   000000A4   0x8889             LDRH     R1,[R1, #+4]
   \   000000A6   0x29C8             CMP      R1,#+200
   \   000000A8   0xDA18             BGE.N    ??Mag_Control_2
   \   000000AA   0x....             LDR.N    R1,??DataTable10
   \   000000AC   0x88C9             LDRH     R1,[R1, #+6]
   \   000000AE   0x29C8             CMP      R1,#+200
   \   000000B0   0xDA14             BGE.N    ??Mag_Control_2
   \   000000B2   0x....             LDR.N    R1,??DataTable10
   \   000000B4   0x8849             LDRH     R1,[R1, #+2]
   \   000000B6   0xF240 0x228A      MOVW     R2,#+650
   \   000000BA   0x4291             CMP      R1,R2
   \   000000BC   0xDA0E             BGE.N    ??Mag_Control_2
   \   000000BE   0x....             LDR.N    R1,??DataTable10
   \   000000C0   0x8909             LDRH     R1,[R1, #+8]
   \   000000C2   0xF240 0x228A      MOVW     R2,#+650
   \   000000C6   0x4291             CMP      R1,R2
   \   000000C8   0xDA08             BGE.N    ??Mag_Control_2
   \   000000CA   0x....             LDR.N    R0,??DataTable10_9
   \   000000CC   0x6800             LDR      R0,[R0, #+0]
   \   000000CE   0xF44F 0x7148      MOV      R1,#+800
   \   000000D2   0x4348             MULS     R0,R1,R0
   \   000000D4   0x2101             MOVS     R1,#+1
   \   000000D6   0x....             LDR.N    R2,??DataTable10_10
   \   000000D8   0x7011             STRB     R1,[R2, #+0]
   \   000000DA   0xE002             B.N      ??Mag_Control_3
    118            else lost = 0;
   \                     ??Mag_Control_2: (+1)
   \   000000DC   0x2100             MOVS     R1,#+0
   \   000000DE   0x....             LDR.N    R2,??DataTable10_10
   \   000000E0   0x7011             STRB     R1,[R2, #+0]
    119            if(!lost){
   \                     ??Mag_Control_3: (+1)
   \   000000E2   0x....             LDR.N    R1,??DataTable10_10
   \   000000E4   0x7809             LDRB     R1,[R1, #+0]
   \   000000E6   0x2900             CMP      R1,#+0
   \   000000E8   0xD111             BNE.N    ??Mag_Control_4
    120              left_right = (dir>0? 1:-1); 
   \   000000EA   0x2801             CMP      R0,#+1
   \   000000EC   0xDB03             BLT.N    ??Mag_Control_5
   \   000000EE   0x2101             MOVS     R1,#+1
   \   000000F0   0x....             LDR.N    R2,??DataTable10_9
   \   000000F2   0x6011             STR      R1,[R2, #+0]
   \   000000F4   0xE003             B.N      ??Mag_Control_6
   \                     ??Mag_Control_5: (+1)
   \   000000F6   0xF05F 0x31FF      MOVS     R1,#-1
   \   000000FA   0x....             LDR.N    R2,??DataTable10_9
   \   000000FC   0x6011             STR      R1,[R2, #+0]
    121              return (int)(dir * pow);
   \                     ??Mag_Control_6: (+1)
   \   000000FE   0x.... 0x....      BL       __aeabi_i2f
   \   00000102   0x0031             MOVS     R1,R6
   \   00000104   0x.... 0x....      BL       __aeabi_fmul
   \   00000108   0x.... 0x....      BL       __aeabi_f2iz
   \   0000010C   0xE004             B.N      ??Mag_Control_7
    122            }
    123            else return left_right*800;
   \                     ??Mag_Control_4: (+1)
   \   0000010E   0x....             LDR.N    R0,??DataTable10_9
   \   00000110   0x6800             LDR      R0,[R0, #+0]
   \   00000112   0xF44F 0x7148      MOV      R1,#+800
   \   00000116   0x4348             MULS     R0,R1,R0
   \                     ??Mag_Control_7: (+1)
   \   00000118   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
    124          }

   \                                 In section .bss, align 4
   \                     `Mag_Control::last_err_mag`:
   \   00000000                      DS8 4
    125          

   \                                 In section .text, align 2, keep-with-next
    126          void Mixed_Control(){
   \                     Mixed_Control: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    127            int mixed_dir = (Mag_Control()*0.9 + Cam_2_line()*0.8 + Cam_k()*0.4);
   \   00000002   0x.... 0x....      BL       Mag_Control
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x.... 0x....      BL       Cam_2_line
   \   0000000C   0x0006             MOVS     R6,R0
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0x.... 0x....      BL       __aeabi_i2d
   \   00000014   0x....             LDR.N    R2,??DataTable10_11  ;; 0xcccccccd
   \   00000016   0x....             LDR.N    R3,??DataTable10_12  ;; 0x3feccccc
   \   00000018   0x.... 0x....      BL       __aeabi_dmul
   \   0000001C   0x0004             MOVS     R4,R0
   \   0000001E   0x000D             MOVS     R5,R1
   \   00000020   0x0030             MOVS     R0,R6
   \   00000022   0x.... 0x....      BL       __aeabi_i2d
   \   00000026   0x....             LDR.N    R2,??DataTable10_3  ;; 0x9999999a
   \   00000028   0x....             LDR.N    R3,??DataTable10_13  ;; 0x3fe99999
   \   0000002A   0x.... 0x....      BL       __aeabi_dmul
   \   0000002E   0x0022             MOVS     R2,R4
   \   00000030   0x002B             MOVS     R3,R5
   \   00000032   0x.... 0x....      BL       __aeabi_dadd
   \   00000036   0x0004             MOVS     R4,R0
   \   00000038   0x000D             MOVS     R5,R1
   \   0000003A   0x.... 0x....      BL       Cam_k
   \   0000003E   0x.... 0x....      BL       __aeabi_i2d
   \   00000042   0x....             LDR.N    R2,??DataTable10_3  ;; 0x9999999a
   \   00000044   0x....             LDR.N    R3,??DataTable10_8  ;; 0x3fd99999
   \   00000046   0x.... 0x....      BL       __aeabi_dmul
   \   0000004A   0x0022             MOVS     R2,R4
   \   0000004C   0x002B             MOVS     R3,R5
   \   0000004E   0x.... 0x....      BL       __aeabi_dadd
   \   00000052   0x.... 0x....      BL       __aeabi_d2iz
   \   00000056   0x0004             MOVS     R4,R0
    128            Circle_Con();
   \   00000058   0x.... 0x....      BL       Circle_Con
    129            mixed_dir *= (mixed_dir>0?circle_dep_left:circle_dep_right);
   \   0000005C   0x2C01             CMP      R4,#+1
   \   0000005E   0xDB02             BLT.N    ??Mixed_Control_0
   \   00000060   0x....             LDR.N    R0,??DataTable10_14
   \   00000062   0x6805             LDR      R5,[R0, #+0]
   \   00000064   0xE001             B.N      ??Mixed_Control_1
   \                     ??Mixed_Control_0: (+1)
   \   00000066   0x....             LDR.N    R0,??DataTable10_15
   \   00000068   0x6805             LDR      R5,[R0, #+0]
   \                     ??Mixed_Control_1: (+1)
   \   0000006A   0x0020             MOVS     R0,R4
   \   0000006C   0x.... 0x....      BL       __aeabi_i2f
   \   00000070   0x0029             MOVS     R1,R5
   \   00000072   0x.... 0x....      BL       __aeabi_fmul
   \   00000076   0x.... 0x....      BL       __aeabi_f2iz
    130            dir = mixed_dir;
   \   0000007A   0x....             LDR.N    R1,??DataTable10_16
   \   0000007C   0x6008             STR      R0,[R1, #+0]
    131            Servo_Output(-mixed_dir);
   \   0000007E   0x4240             RSBS     R0,R0,#+0
   \   00000080   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   00000082   0x.... 0x....      BL       Servo_Output
    132          }
   \   00000086   0xBD70             POP      {R4-R6,PC}       ;; return
    133          

   \                                 In section .text, align 2, keep-with-next
    134          void Circle_Con(){
    135            static int circle_cnt=0;
    136            if(mag_val[2]>600 && mag_val[3]>600 && mag_val[0]>700 && mag_val[5] == 0){circle_dep_right=0.2;circle_cnt+=1;}
   \                     Circle_Con: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable10
   \   00000002   0x8880             LDRH     R0,[R0, #+4]
   \   00000004   0xF240 0x2159      MOVW     R1,#+601
   \   00000008   0x4288             CMP      R0,R1
   \   0000000A   0xDB18             BLT.N    ??Circle_Con_0
   \   0000000C   0x....             LDR.N    R0,??DataTable10
   \   0000000E   0x88C0             LDRH     R0,[R0, #+6]
   \   00000010   0xF240 0x2159      MOVW     R1,#+601
   \   00000014   0x4288             CMP      R0,R1
   \   00000016   0xDB12             BLT.N    ??Circle_Con_0
   \   00000018   0x....             LDR.N    R0,??DataTable10
   \   0000001A   0x8800             LDRH     R0,[R0, #+0]
   \   0000001C   0xF240 0x21BD      MOVW     R1,#+701
   \   00000020   0x4288             CMP      R0,R1
   \   00000022   0xDB0C             BLT.N    ??Circle_Con_0
   \   00000024   0x....             LDR.N    R0,??DataTable10
   \   00000026   0x8940             LDRH     R0,[R0, #+10]
   \   00000028   0x2800             CMP      R0,#+0
   \   0000002A   0xD108             BNE.N    ??Circle_Con_0
   \   0000002C   0x....             LDR.N    R0,??DataTable10_17  ;; 0x3e4ccccd
   \   0000002E   0x....             LDR.N    R1,??DataTable10_15
   \   00000030   0x6008             STR      R0,[R1, #+0]
   \   00000032   0x....             LDR.N    R0,??DataTable10_18
   \   00000034   0x6800             LDR      R0,[R0, #+0]
   \   00000036   0x1C40             ADDS     R0,R0,#+1
   \   00000038   0x....             LDR.N    R1,??DataTable10_18
   \   0000003A   0x6008             STR      R0,[R1, #+0]
   \   0000003C   0xE00A             B.N      ??Circle_Con_1
    137            else if(circle_cnt >10){circle_dep_right = 1.0;circle_cnt = 0;}
   \                     ??Circle_Con_0: (+1)
   \   0000003E   0x....             LDR.N    R0,??DataTable10_18
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0x280B             CMP      R0,#+11
   \   00000044   0xDB06             BLT.N    ??Circle_Con_1
   \   00000046   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000004A   0x....             LDR.N    R1,??DataTable10_15
   \   0000004C   0x6008             STR      R0,[R1, #+0]
   \   0000004E   0x2000             MOVS     R0,#+0
   \   00000050   0x....             LDR.N    R1,??DataTable10_18
   \   00000052   0x6008             STR      R0,[R1, #+0]
    138            if(mag_val[2]>600 && mag_val[3]>600 && mag_val[5]>700 && mag_val[0] == 0){circle_dep_left=0.2;circle_cnt += 1;}
   \                     ??Circle_Con_1: (+1)
   \   00000054   0x....             LDR.N    R0,??DataTable10
   \   00000056   0x8880             LDRH     R0,[R0, #+4]
   \   00000058   0xF240 0x2159      MOVW     R1,#+601
   \   0000005C   0x4288             CMP      R0,R1
   \   0000005E   0xDB18             BLT.N    ??Circle_Con_2
   \   00000060   0x....             LDR.N    R0,??DataTable10
   \   00000062   0x88C0             LDRH     R0,[R0, #+6]
   \   00000064   0xF240 0x2159      MOVW     R1,#+601
   \   00000068   0x4288             CMP      R0,R1
   \   0000006A   0xDB12             BLT.N    ??Circle_Con_2
   \   0000006C   0x....             LDR.N    R0,??DataTable10
   \   0000006E   0x8940             LDRH     R0,[R0, #+10]
   \   00000070   0xF240 0x21BD      MOVW     R1,#+701
   \   00000074   0x4288             CMP      R0,R1
   \   00000076   0xDB0C             BLT.N    ??Circle_Con_2
   \   00000078   0x....             LDR.N    R0,??DataTable10
   \   0000007A   0x8800             LDRH     R0,[R0, #+0]
   \   0000007C   0x2800             CMP      R0,#+0
   \   0000007E   0xD108             BNE.N    ??Circle_Con_2
   \   00000080   0x....             LDR.N    R0,??DataTable10_17  ;; 0x3e4ccccd
   \   00000082   0x....             LDR.N    R1,??DataTable10_14
   \   00000084   0x6008             STR      R0,[R1, #+0]
   \   00000086   0x....             LDR.N    R0,??DataTable10_18
   \   00000088   0x6800             LDR      R0,[R0, #+0]
   \   0000008A   0x1C40             ADDS     R0,R0,#+1
   \   0000008C   0x....             LDR.N    R1,??DataTable10_18
   \   0000008E   0x6008             STR      R0,[R1, #+0]
   \   00000090   0xE00A             B.N      ??Circle_Con_3
    139            else if(circle_cnt>10){circle_dep_left = 1.0;circle_cnt = 0;}
   \                     ??Circle_Con_2: (+1)
   \   00000092   0x....             LDR.N    R0,??DataTable10_18
   \   00000094   0x6800             LDR      R0,[R0, #+0]
   \   00000096   0x280B             CMP      R0,#+11
   \   00000098   0xDB06             BLT.N    ??Circle_Con_3
   \   0000009A   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000009E   0x....             LDR.N    R1,??DataTable10_14
   \   000000A0   0x6008             STR      R0,[R1, #+0]
   \   000000A2   0x2000             MOVS     R0,#+0
   \   000000A4   0x....             LDR.N    R1,??DataTable10_18
   \   000000A6   0x6008             STR      R0,[R1, #+0]
    140          }
   \                     ??Circle_Con_3: (+1)
   \   000000A8   0x4770             BX       LR               ;; return

   \                                 In section .bss, align 4
   \                     `Circle_Con::circle_cnt`:
   \   00000000                      DS8 4
    141          
    142          
    143          

   \                                 In section .text, align 2, keep-with-next
    144          void Mag_Init(){
    145            
    146            if(!ADC1_enabled){
   \                     Mag_Init: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable10_19
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x2800             CMP      R0,#+0
   \   00000006   0xD11A             BNE.N    ??Mag_Init_0
    147              SIM->SCGC3 |= SIM_SCGC3_ADC1_MASK;  //ADC1 Clock Enable
   \   00000008   0x....             LDR.N    R0,??DataTable10_20  ;; 0x40048030
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0xF050 0x6000      ORRS     R0,R0,#0x8000000
   \   00000010   0x....             LDR.N    R1,??DataTable10_20  ;; 0x40048030
   \   00000012   0x6008             STR      R0,[R1, #+0]
    148              ADC1->CFG1 |= 0
    149                         //|ADC_CFG1_ADLPC_MASK
    150                         | ADC_CFG1_ADICLK(1)
    151                         | ADC_CFG1_MODE(1)
    152                         | ADC_CFG1_ADIV(0);
   \   00000014   0x....             LDR.N    R0,??DataTable10_21  ;; 0x400bb008
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF050 0x0005      ORRS     R0,R0,#0x5
   \   0000001C   0x....             LDR.N    R1,??DataTable10_21  ;; 0x400bb008
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    153              ADC1->CFG2 |= //ADC_CFG2_ADHSC_MASK |
    154                            ADC_CFG2_ADACKEN_MASK;
   \   00000020   0x....             LDR.N    R0,??DataTable10_22  ;; 0x400bb00c
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000028   0x....             LDR.N    R1,??DataTable10_22  ;; 0x400bb00c
   \   0000002A   0x6008             STR      R0,[R1, #+0]
    155              
    156              ADC1->SC1[0]&=~ADC_SC1_AIEN_MASK;//disenble interrupt
   \   0000002C   0x....             LDR.N    R0,??DataTable10_1  ;; 0x400bb000
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0xF030 0x0040      BICS     R0,R0,#0x40
   \   00000034   0x....             LDR.N    R1,??DataTable10_1  ;; 0x400bb000
   \   00000036   0x6008             STR      R0,[R1, #+0]
    157              ADC1_enabled = 1;
   \   00000038   0x2001             MOVS     R0,#+1
   \   0000003A   0x....             LDR.N    R1,??DataTable10_19
   \   0000003C   0x7008             STRB     R0,[R1, #+0]
    158            }
    159            
    160            PORTE->PCR[0]|=PORT_PCR_MUX(0);//adc1-4a
   \                     ??Mag_Init_0: (+1)
   \   0000003E   0x....             LDR.N    R0,??DataTable10_23  ;; 0x4004d000
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0x....             LDR.N    R1,??DataTable10_23  ;; 0x4004d000
   \   00000044   0x6008             STR      R0,[R1, #+0]
    161            PORTE->PCR[1]|=PORT_PCR_MUX(0);//adc1-5a
   \   00000046   0x....             LDR.N    R0,??DataTable10_24  ;; 0x4004d004
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0x....             LDR.N    R1,??DataTable10_24  ;; 0x4004d004
   \   0000004C   0x6008             STR      R0,[R1, #+0]
    162            PORTE->PCR[2]|=PORT_PCR_MUX(0);//adc1-6a
   \   0000004E   0x....             LDR.N    R0,??DataTable10_25  ;; 0x4004d008
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0x....             LDR.N    R1,??DataTable10_25  ;; 0x4004d008
   \   00000054   0x6008             STR      R0,[R1, #+0]
    163            PORTE->PCR[3]|=PORT_PCR_MUX(0);//adc1-7a
   \   00000056   0x....             LDR.N    R0,??DataTable10_26  ;; 0x4004d00c
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0x....             LDR.N    R1,??DataTable10_26  ;; 0x4004d00c
   \   0000005C   0x6008             STR      R0,[R1, #+0]
    164          }
   \   0000005E   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x........         DC32     mag_val

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x400BB000         DC32     0x400bb000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \   00000000   0x400BB010         DC32     0x400bb010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_3:
   \   00000000   0x9999999A         DC32     0x9999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_4:
   \   00000000   0x3FC99999         DC32     0x3fc99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_5:
   \   00000000   0x3FD33333         DC32     0x3fd33333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_6:
   \   00000000   0x3FF33333         DC32     0x3ff33333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_7:
   \   00000000   0x........         DC32     `Mag_Control::last_err_mag`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_8:
   \   00000000   0x3FD99999         DC32     0x3fd99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_9:
   \   00000000   0x........         DC32     left_right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_10:
   \   00000000   0x........         DC32     lost

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_11:
   \   00000000   0xCCCCCCCD         DC32     0xcccccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_12:
   \   00000000   0x3FECCCCC         DC32     0x3feccccc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_13:
   \   00000000   0x3FE99999         DC32     0x3fe99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_14:
   \   00000000   0x........         DC32     circle_dep_left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_15:
   \   00000000   0x........         DC32     circle_dep_right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_16:
   \   00000000   0x........         DC32     dir

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_17:
   \   00000000   0x3E4CCCCD         DC32     0x3e4ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_18:
   \   00000000   0x........         DC32     `Circle_Con::circle_cnt`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_19:
   \   00000000   0x........         DC32     ADC1_enabled

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_20:
   \   00000000   0x40048030         DC32     0x40048030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_21:
   \   00000000   0x400BB008         DC32     0x400bb008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_22:
   \   00000000   0x400BB00C         DC32     0x400bb00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_23:
   \   00000000   0x4004D000         DC32     0x4004d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_24:
   \   00000000   0x4004D004         DC32     0x4004d004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_25:
   \   00000000   0x4004D008         DC32     0x4004d008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_26:
   \   00000000   0x4004D00C         DC32     0x4004d00c

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   Circle_Con
       0   Mag1
       0   Mag2
       0   Mag3
       0   Mag4
       0   Mag5
       0   Mag6
      24   Mag_Control
        24   -> __aeabi_d2iz
        24   -> __aeabi_dadd
        24   -> __aeabi_dmul
        24   -> __aeabi_f2iz
        24   -> __aeabi_fmul
        24   -> __aeabi_i2d
        24   -> __aeabi_i2f
       0   Mag_Init
       8   Mag_Sample
         8   -> Mag1
         8   -> Mag2
         8   -> Mag3
         8   -> Mag4
         8   -> Mag5
         8   -> Mag6
      16   Mixed_Control
        16   -> Cam_2_line
        16   -> Cam_k
        16   -> Circle_Con
        16   -> Mag_Control
        16   -> Servo_Output
        16   -> __aeabi_d2iz
        16   -> __aeabi_dadd
        16   -> __aeabi_dmul
        16   -> __aeabi_f2iz
        16   -> __aeabi_fmul
        16   -> __aeabi_i2d
        16   -> __aeabi_i2f


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_10
       4  ??DataTable10_11
       4  ??DataTable10_12
       4  ??DataTable10_13
       4  ??DataTable10_14
       4  ??DataTable10_15
       4  ??DataTable10_16
       4  ??DataTable10_17
       4  ??DataTable10_18
       4  ??DataTable10_19
       4  ??DataTable10_2
       4  ??DataTable10_20
       4  ??DataTable10_21
       4  ??DataTable10_22
       4  ??DataTable10_23
       4  ??DataTable10_24
       4  ??DataTable10_25
       4  ??DataTable10_26
       4  ??DataTable10_3
       4  ??DataTable10_4
       4  ??DataTable10_5
       4  ??DataTable10_6
       4  ??DataTable10_7
       4  ??DataTable10_8
       4  ??DataTable10_9
     170  Circle_Con
      28  Mag1
      28  Mag2
      28  Mag3
      28  Mag4
      22  Mag5
      22  Mag6
     282  Mag_Control
      96  Mag_Init
      72  Mag_Sample
     136  Mixed_Control
       4  circle_cnt
       4  circle_dep_left
       4  circle_dep_right
       4  huandao
       4  last_err_mag
       4  left_right
       1  lost
      12  mag_val

 
    29 bytes in section .bss
     8 bytes in section .data
 1 020 bytes in section .text
 
 1 020 bytes of CODE memory
    37 bytes of DATA memory

Errors: none
Warnings: 9
