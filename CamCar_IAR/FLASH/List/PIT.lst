###############################################################################
#
# IAR ANSI C/C++ Compiler V8.20.1.14183/W32 for ARM       08/Jul/2019  15:30:48
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  E:\IARworkspace\CamCar_IAR\source\PIT.c
#    Command line =  
#        -f C:\Users\57416\AppData\Local\Temp\EW870A.tmp
#        (E:\IARworkspace\CamCar_IAR\source\PIT.c -lCN
#        E:\IARworkspace\CamCar_IAR\FLASH\List -lB
#        E:\IARworkspace\CamCar_IAR\FLASH\List -o
#        E:\IARworkspace\CamCar_IAR\FLASH\Obj --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4 -e --char_is_signed --fpu=None
#        --dlib_config "D:\Program
#        Files(x86)\IAR\arm\INC\c\DLib_Config_Normal.h" -I
#        E:\IARworkspace\CamCar_IAR\source\ -I
#        E:\IARworkspace\CamCar_IAR\common\ -I E:\IARworkspace\CamCar_IAR\LPLD\
#        -I E:\IARworkspace\CamCar_IAR\LPLD\HW\ -I
#        E:\IARworkspace\CamCar_IAR\LPLD\DEV\ -Ol -I "D:\Program
#        Files(x86)\IAR\arm\CMSIS\Include\" -D ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  E:\IARworkspace\CamCar_IAR\FLASH\List\PIT.lst
#    Object file  =  E:\IARworkspace\CamCar_IAR\FLASH\Obj\PIT.o
#
###############################################################################

E:\IARworkspace\CamCar_IAR\source\PIT.c
      1          /*
      2          Arthor : Qian Qiyang (KisaragiAyanoo@twitter)
      3          Date : 2015/12/01
      4          License : MIT
      5          */
      6          
      7          #include "includes.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void __NVIC_EnableIRQ(IRQn_Type)
   \                     __NVIC_EnableIRQ: (+1)
   \   00000000   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD409             BMI.N    ??__NVIC_EnableIRQ_0
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0xF010 0x011F      ANDS     R1,R0,#0x1F
   \   0000000C   0x408A             LSLS     R2,R2,R1
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0xe000e100
   \   00000012   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000014   0x0940             LSRS     R0,R0,#+5
   \   00000016   0xF841 0x2020      STR      R2,[R1, R0, LSL #+2]
   \                     ??__NVIC_EnableIRQ_0: (+1)
   \   0000001A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void __NVIC_SetPriority(IRQn_Type, uint32_t)
   \                     __NVIC_SetPriority: (+1)
   \   00000000   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD405             BMI.N    ??__NVIC_SetPriority_0
   \   00000006   0x0109             LSLS     R1,R1,#+4
   \   00000008   0x.... 0x....      LDR.W    R2,??DataTable6_1  ;; 0xe000e400
   \   0000000C   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000000E   0x5411             STRB     R1,[R2, R0]
   \   00000010   0xE008             B.N      ??__NVIC_SetPriority_1
   \                     ??__NVIC_SetPriority_0: (+1)
   \   00000012   0x0109             LSLS     R1,R1,#+4
   \   00000014   0x.... 0x....      LDR.W    R2,??DataTable6_2  ;; 0xe000ed18
   \   00000018   0xB240             SXTB     R0,R0            ;; SignExt  R0,R0,#+24,#+24
   \   0000001A   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   0000001E   0x4410             ADD      R0,R2,R0
   \   00000020   0xF800 0x1C04      STRB     R1,[R0, #-4]
   \                     ??__NVIC_SetPriority_1: (+1)
   \   00000024   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp uint32_t NVIC_EncodePriority(uint32_t, uint32_t, uint32_t)
   \                     NVIC_EncodePriority: (+1)
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0xF010 0x0007      ANDS     R0,R0,#0x7
   \   00000006   0xF1D0 0x0307      RSBS     R3,R0,#+7
   \   0000000A   0x2B05             CMP      R3,#+5
   \   0000000C   0xD301             BCC.N    ??NVIC_EncodePriority_0
   \   0000000E   0x2304             MOVS     R3,#+4
   \   00000010   0xE001             B.N      ??NVIC_EncodePriority_1
   \                     ??NVIC_EncodePriority_0: (+1)
   \   00000012   0xF1D0 0x0307      RSBS     R3,R0,#+7
   \                     ??NVIC_EncodePriority_1: (+1)
   \   00000016   0x1D04             ADDS     R4,R0,#+4
   \   00000018   0x2C07             CMP      R4,#+7
   \   0000001A   0xD201             BCS.N    ??NVIC_EncodePriority_2
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xE000             B.N      ??NVIC_EncodePriority_3
   \                     ??NVIC_EncodePriority_2: (+1)
   \   00000020   0x1EC0             SUBS     R0,R0,#+3
   \                     ??NVIC_EncodePriority_3: (+1)
   \   00000022   0x2401             MOVS     R4,#+1
   \   00000024   0xFA14 0xF303      LSLS     R3,R4,R3
   \   00000028   0x1E5B             SUBS     R3,R3,#+1
   \   0000002A   0x4019             ANDS     R1,R3,R1
   \   0000002C   0x4081             LSLS     R1,R1,R0
   \   0000002E   0x2301             MOVS     R3,#+1
   \   00000030   0xFA13 0xF000      LSLS     R0,R3,R0
   \   00000034   0x1E40             SUBS     R0,R0,#+1
   \   00000036   0x4010             ANDS     R0,R0,R2
   \   00000038   0x4308             ORRS     R0,R0,R1
   \   0000003A   0xBC10             POP      {R4}
   \   0000003C   0x4770             BX       LR               ;; return
      8          
      9          
     10          // ========= Variables =========
     11          
     12          //--- global ---

   \                                 In section .bss, align 4
     13          U32 time_us = 0;
   \                     time_us:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     14          U32 pit0_time;
   \                     pit0_time:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     15          U32 pit1_time; 
   \                     pit1_time:
   \   00000000                      DS8 4
     16          
     17          //--- local ---

   \                                 In section .bss, align 4
     18          U32 pit1_time_tmp;
   \                     pit1_time_tmp:
   \   00000000                      DS8 4
     19          extern int dir;
     20          extern u16 mid;
     21          extern int left_right;
     22          // =========== PIT 1 ISR =========== 
     23          // ====  UI Refreshing Loop  ==== ( Low priority ) 
     24          
     25          
     26          

   \                                 In section .text, align 2, keep-with-next
     27          void PIT1_IRQHandler(){
   \                     PIT1_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     28            PIT->CHANNEL[1].TFLG |= PIT_TFLG_TIF_MASK;
   \   00000002   0x....             LDR.N    R0,??DataTable6_3  ;; 0x4003711c
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000000A   0x....             LDR.N    R1,??DataTable6_3  ;; 0x4003711c
   \   0000000C   0x6008             STR      R0,[R1, #+0]
     29            
     30            pit1_time_tmp = PIT2_VAL();
   \   0000000E   0x....             LDR.N    R0,??DataTable6_4  ;; 0x40037124
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x....             LDR.N    R1,??DataTable6_5
   \   00000014   0x6008             STR      R0,[R1, #+0]
     31            
     32            //------------------------
     33            
     34            LED1_Tog();
   \   00000016   0x.... 0x....      BL       LED1_Tog
     35            
     36            //UI_Operation_Service();
     37            
     38            Bell_Service();
   \   0000001A   0x.... 0x....      BL       Bell_Service
     39            
     40            //Oled_Clear();
     41            /*
     42            Oled_Putstr(0,0,"0"); Oled_Putnum(0,11,mag_val[0]);
     43            Oled_Putstr(1,0,"1"); Oled_Putnum(1,11,mag_val[1]);
     44            Oled_Putstr(3,0,"2"); Oled_Putnum(3,11,mag_val[2]);
     45            Oled_Putstr(4,0,"3"); Oled_Putnum(4,11,mag_val[3]);
     46            Oled_Putstr(5,0,"4"); Oled_Putnum(5,11,mag_val[4]);
     47            Oled_Putstr(6,0,"5"); Oled_Putnum(6,11,mag_val[5]);
     48            */
     49            //Oled_Putstr(0,0,"last_dir"); Oled_Putnum(0,11,left_right);
     50            //Oled_Putstr(0,0,"left white"); Oled_Putnum(0,11,left_white);
     51            //Oled_Putstr(1,0,"right white"); Oled_Putnum(1,11,right_white);
     52             //Oled_Putstr(1,0,"mid: "); Oled_Putnum(1,11,mid);
     53            //Oled_Putstr(1,0,"dir: "); Oled_Putnum(1,11,dir);
     54          
     55            if(!SW1())
   \   0000001E   0x....             LDR.N    R0,??DataTable6_6  ;; 0x400ff090
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0xF3C0 0x1000      UBFX     R0,R0,#+4,#+1
   \   00000026   0x2800             CMP      R0,#+0
   \   00000028   0xD161             BNE.N    ??PIT1_IRQHandler_0
     56            {
     57              Oled_Clear();
   \   0000002A   0x.... 0x....      BL       Oled_Clear
     58              /*
     59              Oled_Putstr(0,0,"Dir: "); Oled_Putnum(0,6,dir);
     60              Oled_Putstr(2,0,"Mid: "); Oled_Putnum(2,6,mid);
     61              */
     62              Oled_Putstr(0,0,"0"); Oled_Putnum(0,11,mag_val[0]);
   \   0000002E   0x....             ADR.N    R2,??DataTable4  ;; "0"
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0x2000             MOVS     R0,#+0
   \   00000034   0x.... 0x....      BL       Oled_Putstr
   \   00000038   0x....             LDR.N    R0,??DataTable6_7
   \   0000003A   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000003E   0x0002             MOVS     R2,R0
   \   00000040   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000042   0x210B             MOVS     R1,#+11
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x.... 0x....      BL       Oled_Putnum
     63              Oled_Putstr(1,0,"1"); Oled_Putnum(1,11,mag_val[1]);
   \   0000004A   0x....             ADR.N    R2,??DataTable4_1  ;; "1"
   \   0000004C   0x2100             MOVS     R1,#+0
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0x.... 0x....      BL       Oled_Putstr
   \   00000054   0x....             LDR.N    R0,??DataTable6_7
   \   00000056   0xF9B0 0x0002      LDRSH    R0,[R0, #+2]
   \   0000005A   0x0002             MOVS     R2,R0
   \   0000005C   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000005E   0x210B             MOVS     R1,#+11
   \   00000060   0x2001             MOVS     R0,#+1
   \   00000062   0x.... 0x....      BL       Oled_Putnum
     64              Oled_Putstr(2,0,"2"); Oled_Putnum(2,11,mag_val[2]);
   \   00000066   0x....             ADR.N    R2,??DataTable4_2  ;; "2"
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x2002             MOVS     R0,#+2
   \   0000006C   0x.... 0x....      BL       Oled_Putstr
   \   00000070   0x....             LDR.N    R0,??DataTable6_7
   \   00000072   0xF9B0 0x0004      LDRSH    R0,[R0, #+4]
   \   00000076   0x0002             MOVS     R2,R0
   \   00000078   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   0000007A   0x210B             MOVS     R1,#+11
   \   0000007C   0x2002             MOVS     R0,#+2
   \   0000007E   0x.... 0x....      BL       Oled_Putnum
     65              Oled_Putstr(3,0,"3"); Oled_Putnum(3,11,mag_val[3]);
   \   00000082   0x....             ADR.N    R2,??DataTable4_3  ;; "3"
   \   00000084   0x2100             MOVS     R1,#+0
   \   00000086   0x2003             MOVS     R0,#+3
   \   00000088   0x.... 0x....      BL       Oled_Putstr
   \   0000008C   0x....             LDR.N    R0,??DataTable6_7
   \   0000008E   0xF9B0 0x0006      LDRSH    R0,[R0, #+6]
   \   00000092   0x0002             MOVS     R2,R0
   \   00000094   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   00000096   0x210B             MOVS     R1,#+11
   \   00000098   0x2003             MOVS     R0,#+3
   \   0000009A   0x.... 0x....      BL       Oled_Putnum
     66              Oled_Putstr(4,0,"4"); Oled_Putnum(4,11,mag_val[4]);
   \   0000009E   0x....             ADR.N    R2,??DataTable5  ;; "4"
   \   000000A0   0x2100             MOVS     R1,#+0
   \   000000A2   0x2004             MOVS     R0,#+4
   \   000000A4   0x.... 0x....      BL       Oled_Putstr
   \   000000A8   0x....             LDR.N    R0,??DataTable6_7
   \   000000AA   0xF9B0 0x0008      LDRSH    R0,[R0, #+8]
   \   000000AE   0x0002             MOVS     R2,R0
   \   000000B0   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000B2   0x210B             MOVS     R1,#+11
   \   000000B4   0x2004             MOVS     R0,#+4
   \   000000B6   0x.... 0x....      BL       Oled_Putnum
     67              Oled_Putstr(5,0,"5"); Oled_Putnum(5,11,mag_val[5]);
   \   000000BA   0x....             ADR.N    R2,??DataTable5_1  ;; "5"
   \   000000BC   0x2100             MOVS     R1,#+0
   \   000000BE   0x2005             MOVS     R0,#+5
   \   000000C0   0x.... 0x....      BL       Oled_Putstr
   \   000000C4   0x....             LDR.N    R0,??DataTable6_7
   \   000000C6   0xF9B0 0x000A      LDRSH    R0,[R0, #+10]
   \   000000CA   0x0002             MOVS     R2,R0
   \   000000CC   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000CE   0x210B             MOVS     R1,#+11
   \   000000D0   0x2005             MOVS     R0,#+5
   \   000000D2   0x.... 0x....      BL       Oled_Putnum
     68              Oled_Putstr(6,0,"huandao"); Oled_Putnum(6,11,huandao);
   \   000000D6   0x....             LDR.N    R2,??DataTable6_8
   \   000000D8   0x2100             MOVS     R1,#+0
   \   000000DA   0x2006             MOVS     R0,#+6
   \   000000DC   0x.... 0x....      BL       Oled_Putstr
   \   000000E0   0x....             LDR.N    R0,??DataTable6_9
   \   000000E2   0x6802             LDR      R2,[R0, #+0]
   \   000000E4   0xB212             SXTH     R2,R2            ;; SignExt  R2,R2,#+16,#+16
   \   000000E6   0x210B             MOVS     R1,#+11
   \   000000E8   0x2006             MOVS     R0,#+6
   \   000000EA   0x.... 0x....      BL       Oled_Putnum
     69            }
     70            if(!SW2())
   \                     ??PIT1_IRQHandler_0: (+1)
   \   000000EE   0x....             LDR.N    R0,??DataTable6_6  ;; 0x400ff090
   \   000000F0   0x6800             LDR      R0,[R0, #+0]
   \   000000F2   0xF3C0 0x1040      UBFX     R0,R0,#+5,#+1
   \   000000F6   0x2800             CMP      R0,#+0
   \   000000F8   0xD103             BNE.N    ??PIT1_IRQHandler_1
     71            {
     72              Oled_Clear();
   \   000000FA   0x.... 0x....      BL       Oled_Clear
     73              displayCamera();
   \   000000FE   0x.... 0x....      BL       displayCamera
     74            }
     75            if(!SW3())
   \                     ??PIT1_IRQHandler_1: (+1)
   \   00000102   0x....             LDR.N    R0,??DataTable6_6  ;; 0x400ff090
   \   00000104   0x6800             LDR      R0,[R0, #+0]
   \   00000106   0xF3C0 0x1080      UBFX     R0,R0,#+6,#+1
   \   0000010A   0x2800             CMP      R0,#+0
   \   0000010C   0xD101             BNE.N    ??PIT1_IRQHandler_2
     76              Oled_Clear();
   \   0000010E   0x.... 0x....      BL       Oled_Clear
     77            if(!SW4())
   \                     ??PIT1_IRQHandler_2: (+1)
   \   00000112   0x....             LDR.N    R0,??DataTable6_6  ;; 0x400ff090
   \   00000114   0x6800             LDR      R0,[R0, #+0]
   \   00000116   0xF3C0 0x10C0      UBFX     R0,R0,#+7,#+1
   \   0000011A   0x2800             CMP      R0,#+0
   \   0000011C   0xD119             BNE.N    ??PIT1_IRQHandler_3
     78            {
     79              Oled_Clear();
   \   0000011E   0x.... 0x....      BL       Oled_Clear
     80              Oled_Putstr(1,0,"tacho: "); Oled_Putnum(1,6,tacho0);
   \   00000122   0x....             LDR.N    R2,??DataTable6_10
   \   00000124   0x2100             MOVS     R1,#+0
   \   00000126   0x2001             MOVS     R0,#+1
   \   00000128   0x.... 0x....      BL       Oled_Putstr
   \   0000012C   0x....             LDR.N    R0,??DataTable6_11
   \   0000012E   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   00000132   0x2106             MOVS     R1,#+6
   \   00000134   0x2001             MOVS     R0,#+1
   \   00000136   0x.... 0x....      BL       Oled_Putnum
     81              Oled_Putstr(2,0,"tacho1: "); Oled_Putnum(2,6,tacho1);
   \   0000013A   0x....             LDR.N    R2,??DataTable6_12
   \   0000013C   0x2100             MOVS     R1,#+0
   \   0000013E   0x2002             MOVS     R0,#+2
   \   00000140   0x.... 0x....      BL       Oled_Putstr
   \   00000144   0x....             LDR.N    R0,??DataTable6_13
   \   00000146   0xF9B0 0x2000      LDRSH    R2,[R0, #+0]
   \   0000014A   0x2106             MOVS     R1,#+6
   \   0000014C   0x2002             MOVS     R0,#+2
   \   0000014E   0x.... 0x....      BL       Oled_Putnum
     82            }
     83            
     84            
     85            //------------ Other -------------
     86            
     87            pit1_time_tmp = pit1_time_tmp - PIT2_VAL();
   \                     ??PIT1_IRQHandler_3: (+1)
   \   00000152   0x....             LDR.N    R0,??DataTable6_5
   \   00000154   0x6801             LDR      R1,[R0, #+0]
   \   00000156   0x....             LDR.N    R0,??DataTable6_4  ;; 0x40037124
   \   00000158   0x6800             LDR      R0,[R0, #+0]
   \   0000015A   0x1A09             SUBS     R1,R1,R0
   \   0000015C   0x....             LDR.N    R0,??DataTable6_5
   \   0000015E   0x6001             STR      R1,[R0, #+0]
     88            pit1_time_tmp = pit1_time_tmp / (g_bus_clock/10000); //100us
   \   00000160   0x....             LDR.N    R0,??DataTable6_14
   \   00000162   0x6800             LDR      R0,[R0, #+0]
   \   00000164   0xF242 0x7110      MOVW     R1,#+10000
   \   00000168   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000016C   0x....             LDR.N    R1,??DataTable6_5
   \   0000016E   0x6809             LDR      R1,[R1, #+0]
   \   00000170   0xFBB1 0xF0F0      UDIV     R0,R1,R0
   \   00000174   0x....             LDR.N    R1,??DataTable6_5
   \   00000176   0x6008             STR      R0,[R1, #+0]
     89            pit1_time = pit1_time_tmp;
   \   00000178   0x....             LDR.N    R0,??DataTable6_5
   \   0000017A   0x6800             LDR      R0,[R0, #+0]
   \   0000017C   0x....             LDR.N    R1,??DataTable6_15
   \   0000017E   0x6008             STR      R0,[R1, #+0]
     90            
     91          }
   \   00000180   0xBD01             POP      {R0,PC}          ;; return
     92          
     93          
     94          
     95          //============ PIT 0 ISR  ==========
     96          // ====  Control  ==== ( High priority )
     97          
     98          
     99          
    100          
    101          

   \                                 In section .text, align 2, keep-with-next
    102          void PIT0_IRQHandler(){
   \                     PIT0_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    103            PIT->CHANNEL[0].TFLG |= PIT_TFLG_TIF_MASK;
   \   00000002   0x....             LDR.N    R0,??DataTable6_16  ;; 0x4003710c
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000000A   0x....             LDR.N    R1,??DataTable6_16  ;; 0x4003710c
   \   0000000C   0x6008             STR      R0,[R1, #+0]
    104            
    105            time_us += PIT0_PERIOD_US;
   \   0000000E   0x....             LDR.N    R0,??DataTable6_17
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0xF600 0x10C4      ADDW     R0,R0,#+2500
   \   00000016   0x....             LDR.N    R1,??DataTable6_17
   \   00000018   0x6008             STR      R0,[R1, #+0]
    106          
    107            //LED2_Tog();
    108            
    109            //-------- System info -----
    110            
    111            pit0_time = PIT2_VAL();
   \   0000001A   0x....             LDR.N    R0,??DataTable6_4  ;; 0x40037124
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0x....             LDR.N    R1,??DataTable6_18
   \   00000020   0x6008             STR      R0,[R1, #+0]
    112              
    113            battery = Battery();
   \   00000022   0x.... 0x....      BL       Battery
   \   00000026   0x....             LDR.N    R1,??DataTable6_19
   \   00000028   0x8008             STRH     R0,[R1, #+0]
    114            
    115            
    116            
    117            
    118            //-------- Get Sensers -----
    119            
    120            
    121            // Tacho
    122            Tacho0_Get();
   \   0000002A   0x.... 0x....      BL       Tacho0_Get
    123            Tacho1_Get();
   \   0000002E   0x.... 0x....      BL       Tacho1_Get
    124            
    125            
    126            // UI operation input
    127            ui_operation_cnt += tacho0;  // use tacho0 or tacho1
   \   00000032   0x....             LDR.N    R0,??DataTable6_20
   \   00000034   0x8801             LDRH     R1,[R0, #+0]
   \   00000036   0x....             LDR.N    R0,??DataTable6_11
   \   00000038   0xF9B0 0x0000      LDRSH    R0,[R0, #+0]
   \   0000003C   0x1841             ADDS     R1,R0,R1
   \   0000003E   0x....             LDR.N    R0,??DataTable6_20
   \   00000040   0x8001             STRH     R1,[R0, #+0]
    128              
    129              
    130            
    131          #if (CAR_TYPE==0)   // Magnet and Balance
    132            
    133            Mag_Sample();
   \   00000042   0x.... 0x....      BL       Mag_Sample
    134          
    135            //gyro1 = Gyro1();
    136            //gyro2 = Gyro2();
    137            
    138            
    139            
    140          #elif (CAR_TYPE==1)     // CCD
    141            
    142            //CCD1_GetLine();
    143            //CCD2_GetLine();
    144            
    145            
    146            
    147            
    148          #else               // Camera & Mag
    149            
    150            // Results of camera are automatically put in cam_buffer[].
    151            Mag_Sample();
    152            
    153            
    154          #endif
    155            
    156            
    157            
    158            // -------- Sensor Algorithm --------- ( Users need to realize this )
    159            
    160            // mag example : dir_error = Mag_Algorithm(mag_val);
    161            // ccd example : dir_error = CCD_Algorithm(ccd1_line,ccd2_line);
    162            // cam is complex. realize it in Cam_Algorithm() in Cam.c
    163            
    164            //-------- Controller --------
    165            
    166            
    167            // not balance example : dir_output = Dir_PIDController(dir_error);
    168            // example : get 'motorL_output' and  'motorR_output'
    169            
    170            
    171            // ------- Output -----
    172            
    173            
    174            // not balance example : Servo_Output(dir_output);  
    175            // example : MotorL_Output(motorL_output); MotorR_Output(motorR_output);
    176            
    177            
    178            
    179            // ------- UART ---------
    180            
    181            
    182            //UART_SendDataHead();
    183            //UART_SendData(battery);
    184            
    185            
    186            
    187            // ------- other --------
    188            
    189            pit0_time = pit0_time - PIT2_VAL();
   \   00000046   0x....             LDR.N    R0,??DataTable6_18
   \   00000048   0x6801             LDR      R1,[R0, #+0]
   \   0000004A   0x....             LDR.N    R0,??DataTable6_4  ;; 0x40037124
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0x1A09             SUBS     R1,R1,R0
   \   00000050   0x....             LDR.N    R0,??DataTable6_18
   \   00000052   0x6001             STR      R1,[R0, #+0]
    190            pit0_time = pit0_time / (g_bus_clock/1000000); //us
   \   00000054   0x....             LDR.N    R0,??DataTable6_14
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0x....             LDR.N    R1,??DataTable6_21  ;; 0xf4240
   \   0000005A   0xFBB0 0xF0F1      UDIV     R0,R0,R1
   \   0000005E   0x....             LDR.N    R1,??DataTable6_18
   \   00000060   0x6809             LDR      R1,[R1, #+0]
   \   00000062   0xFBB1 0xF0F0      UDIV     R0,R1,R0
   \   00000066   0x....             LDR.N    R1,??DataTable6_18
   \   00000068   0x6008             STR      R0,[R1, #+0]
    191            
    192          }
   \   0000006A   0xBD01             POP      {R0,PC}          ;; return
    193          
    194          
    195          
    196          
    197          // ======= INIT ========
    198          

   \                                 In section .text, align 2, keep-with-next
    199          void PIT0_Init(u32 period_us)
    200          { 
   \                     PIT0_Init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    201                             
    202            SIM->SCGC6 |= SIM_SCGC6_PIT_MASK;
   \   00000004   0x....             LDR.N    R0,??DataTable6_22  ;; 0x4004803c
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   0000000C   0x....             LDR.N    R1,??DataTable6_22  ;; 0x4004803c
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    203            
    204            PIT->MCR = 0x00;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x....             LDR.N    R1,??DataTable6_23  ;; 0x40037000
   \   00000014   0x6008             STR      R0,[R1, #+0]
    205           
    206            NVIC_EnableIRQ(PIT0_IRQn); 
   \   00000016   0x2044             MOVS     R0,#+68
   \   00000018   0x.... 0x....      BL       __NVIC_EnableIRQ
    207            NVIC_SetPriority(PIT0_IRQn, NVIC_EncodePriority(NVIC_GROUP, 1, 2));
   \   0000001C   0x2202             MOVS     R2,#+2
   \   0000001E   0x2101             MOVS     R1,#+1
   \   00000020   0x2005             MOVS     R0,#+5
   \   00000022   0x.... 0x....      BL       NVIC_EncodePriority
   \   00000026   0x0001             MOVS     R1,R0
   \   00000028   0x2044             MOVS     R0,#+68
   \   0000002A   0x.... 0x....      BL       __NVIC_SetPriority
    208          
    209            //period = (period_ns/bus_period_ns)-1
    210            PIT->CHANNEL[0].LDVAL |= period_us/100*(g_bus_clock/1000)/10-1; 
   \   0000002E   0x....             LDR.N    R0,??DataTable6_24  ;; 0x40037100
   \   00000030   0x6801             LDR      R1,[R0, #+0]
   \   00000032   0x2064             MOVS     R0,#+100
   \   00000034   0xFBB4 0xF2F0      UDIV     R2,R4,R0
   \   00000038   0x....             LDR.N    R0,??DataTable6_14
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0xF44F 0x737A      MOV      R3,#+1000
   \   00000040   0xFBB0 0xF0F3      UDIV     R0,R0,R3
   \   00000044   0x4342             MULS     R2,R0,R2
   \   00000046   0x200A             MOVS     R0,#+10
   \   00000048   0xFBB2 0xF0F0      UDIV     R0,R2,R0
   \   0000004C   0x1E40             SUBS     R0,R0,#+1
   \   0000004E   0x4301             ORRS     R1,R0,R1
   \   00000050   0x....             LDR.N    R0,??DataTable6_24  ;; 0x40037100
   \   00000052   0x6001             STR      R1,[R0, #+0]
    211            
    212            PIT->CHANNEL[0].TCTRL |= PIT_TCTRL_TIE_MASK |PIT_TCTRL_TEN_MASK;
   \   00000054   0x....             LDR.N    R0,??DataTable6_25  ;; 0x40037108
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xF050 0x0003      ORRS     R0,R0,#0x3
   \   0000005C   0x....             LDR.N    R1,??DataTable6_25  ;; 0x40037108
   \   0000005E   0x6008             STR      R0,[R1, #+0]
    213          
    214          };
   \   00000060   0xBD10             POP      {R4,PC}          ;; return
    215          

   \                                 In section .text, align 2, keep-with-next
    216          void PIT1_Init(u32 period_us)
    217          { 
   \                     PIT1_Init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    218                             
    219            SIM->SCGC6 |= SIM_SCGC6_PIT_MASK;
   \   00000004   0x....             LDR.N    R0,??DataTable6_22  ;; 0x4004803c
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   0000000C   0x....             LDR.N    R1,??DataTable6_22  ;; 0x4004803c
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    220            
    221            PIT->MCR = 0x00;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x....             LDR.N    R1,??DataTable6_23  ;; 0x40037000
   \   00000014   0x6008             STR      R0,[R1, #+0]
    222           
    223            NVIC_EnableIRQ(PIT1_IRQn); 
   \   00000016   0x2045             MOVS     R0,#+69
   \   00000018   0x.... 0x....      BL       __NVIC_EnableIRQ
    224            NVIC_SetPriority(PIT1_IRQn, NVIC_EncodePriority(NVIC_GROUP, 3, 0));
   \   0000001C   0x2200             MOVS     R2,#+0
   \   0000001E   0x2103             MOVS     R1,#+3
   \   00000020   0x2005             MOVS     R0,#+5
   \   00000022   0x.... 0x....      BL       NVIC_EncodePriority
   \   00000026   0x0001             MOVS     R1,R0
   \   00000028   0x2045             MOVS     R0,#+69
   \   0000002A   0x.... 0x....      BL       __NVIC_SetPriority
    225          
    226            //period = (period_ns/bus_period_ns)-1
    227            PIT->CHANNEL[1].LDVAL |= period_us/100*(g_bus_clock/1000)/10-1; 
   \   0000002E   0x....             LDR.N    R0,??DataTable6_26  ;; 0x40037110
   \   00000030   0x6801             LDR      R1,[R0, #+0]
   \   00000032   0x2064             MOVS     R0,#+100
   \   00000034   0xFBB4 0xF2F0      UDIV     R2,R4,R0
   \   00000038   0x....             LDR.N    R0,??DataTable6_14
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0xF44F 0x737A      MOV      R3,#+1000
   \   00000040   0xFBB0 0xF0F3      UDIV     R0,R0,R3
   \   00000044   0x4342             MULS     R2,R0,R2
   \   00000046   0x200A             MOVS     R0,#+10
   \   00000048   0xFBB2 0xF0F0      UDIV     R0,R2,R0
   \   0000004C   0x1E40             SUBS     R0,R0,#+1
   \   0000004E   0x4301             ORRS     R1,R0,R1
   \   00000050   0x....             LDR.N    R0,??DataTable6_26  ;; 0x40037110
   \   00000052   0x6001             STR      R1,[R0, #+0]
    228            
    229            PIT->CHANNEL[1].TCTRL |= PIT_TCTRL_TIE_MASK |PIT_TCTRL_TEN_MASK;
   \   00000054   0x....             LDR.N    R0,??DataTable6_27  ;; 0x40037118
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xF050 0x0003      ORRS     R0,R0,#0x3
   \   0000005C   0x....             LDR.N    R1,??DataTable6_27  ;; 0x40037118
   \   0000005E   0x6008             STR      R0,[R1, #+0]
    230          
    231          }
   \   00000060   0xBD10             POP      {R4,PC}          ;; return
    232          

   \                                 In section .text, align 2, keep-with-next
    233          void PIT2_Init()
    234          { 
    235                             
    236            SIM->SCGC6 |= SIM_SCGC6_PIT_MASK;
   \                     PIT2_Init: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable6_22  ;; 0x4004803c
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF450 0x0000      ORRS     R0,R0,#0x800000
   \   00000008   0x....             LDR.N    R1,??DataTable6_22  ;; 0x4004803c
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    237            
    238            PIT->MCR = 0x00;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x....             LDR.N    R1,??DataTable6_23  ;; 0x40037000
   \   00000010   0x6008             STR      R0,[R1, #+0]
    239          
    240            //period = (period_ns/bus_period_ns)-1
    241            PIT->CHANNEL[2].LDVAL = 0xffffffff; 
   \   00000012   0xF05F 0x30FF      MOVS     R0,#-1
   \   00000016   0x....             LDR.N    R1,??DataTable6_28  ;; 0x40037120
   \   00000018   0x6008             STR      R0,[R1, #+0]
    242            
    243            PIT->CHANNEL[2].TCTRL |= PIT_TCTRL_TEN_MASK;
   \   0000001A   0x....             LDR.N    R0,??DataTable6_29  ;; 0x40037128
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000022   0x....             LDR.N    R1,??DataTable6_29  ;; 0x40037128
   \   00000024   0x6008             STR      R0,[R1, #+0]
    244          
    245          }
   \   00000026   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x30 0x00          DC8      "0",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x31 0x00          DC8      "1",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x32 0x00          DC8      "2",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x33 0x00          DC8      "3",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x34 0x00          DC8      "4",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x35 0x00          DC8      "5",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0xE000E100         DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0xE000E400         DC32     0xe000e400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0xE000ED18         DC32     0xe000ed18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x4003711C         DC32     0x4003711c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x40037124         DC32     0x40037124

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x........         DC32     pit1_time_tmp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x400FF090         DC32     0x400ff090

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x........         DC32     mag_val

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x........         DC32     huandao

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \   00000000   0x........         DC32     tacho0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_12:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_13:
   \   00000000   0x........         DC32     tacho1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_14:
   \   00000000   0x........         DC32     g_bus_clock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_15:
   \   00000000   0x........         DC32     pit1_time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_16:
   \   00000000   0x4003710C         DC32     0x4003710c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_17:
   \   00000000   0x........         DC32     time_us

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_18:
   \   00000000   0x........         DC32     pit0_time

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_19:
   \   00000000   0x........         DC32     battery

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_20:
   \   00000000   0x........         DC32     ui_operation_cnt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_21:
   \   00000000   0x000F4240         DC32     0xf4240

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_22:
   \   00000000   0x4004803C         DC32     0x4004803c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_23:
   \   00000000   0x40037000         DC32     0x40037000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_24:
   \   00000000   0x40037100         DC32     0x40037100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_25:
   \   00000000   0x40037108         DC32     0x40037108

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_26:
   \   00000000   0x40037110         DC32     0x40037110

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_27:
   \   00000000   0x40037118         DC32     0x40037118

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_28:
   \   00000000   0x40037120         DC32     0x40037120

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_29:
   \   00000000   0x40037128         DC32     0x40037128

   \                                 In section .rodata, align 2
   \   00000000   0x30 0x00          DC8 "0"

   \                                 In section .rodata, align 2
   \   00000000   0x31 0x00          DC8 "1"

   \                                 In section .rodata, align 2
   \   00000000   0x32 0x00          DC8 "2"

   \                                 In section .rodata, align 2
   \   00000000   0x33 0x00          DC8 "3"

   \                                 In section .rodata, align 2
   \   00000000   0x34 0x00          DC8 "4"

   \                                 In section .rodata, align 2
   \   00000000   0x35 0x00          DC8 "5"

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x68 0x75          DC8 "huandao"
   \              0x61 0x6E    
   \              0x64 0x61    
   \              0x6F 0x00    

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x74 0x61          DC8 "tacho: "
   \              0x63 0x68    
   \              0x6F 0x3A    
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x74 0x61          DC8 "tacho1: "
   \              0x63 0x68    
   \              0x6F 0x31    
   \              0x3A 0x20    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   NVIC_EncodePriority
       8   PIT0_IRQHandler
         8   -> Battery
         8   -> Mag_Sample
         8   -> Tacho0_Get
         8   -> Tacho1_Get
       8   PIT0_Init
         8   -> NVIC_EncodePriority
         8   -> __NVIC_EnableIRQ
         8   -> __NVIC_SetPriority
       8   PIT1_IRQHandler
         8   -> Bell_Service
         8   -> LED1_Tog
         8   -> Oled_Clear
         8   -> Oled_Putnum
         8   -> Oled_Putstr
         8   -> displayCamera
       8   PIT1_Init
         8   -> NVIC_EncodePriority
         8   -> __NVIC_EnableIRQ
         8   -> __NVIC_SetPriority
       0   PIT2_Init
       0   __NVIC_EnableIRQ
       0   __NVIC_SetPriority


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_14
       4  ??DataTable6_15
       4  ??DataTable6_16
       4  ??DataTable6_17
       4  ??DataTable6_18
       4  ??DataTable6_19
       4  ??DataTable6_2
       4  ??DataTable6_20
       4  ??DataTable6_21
       4  ??DataTable6_22
       4  ??DataTable6_23
       4  ??DataTable6_24
       4  ??DataTable6_25
       4  ??DataTable6_26
       4  ??DataTable6_27
       4  ??DataTable6_28
       4  ??DataTable6_29
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
       2  ?_0
       2  ?_1
       2  ?_2
       2  ?_3
       2  ?_4
       2  ?_5
       8  ?_6
       8  ?_7
      12  ?_8
      62  NVIC_EncodePriority
     108  PIT0_IRQHandler
      98  PIT0_Init
     386  PIT1_IRQHandler
      98  PIT1_Init
      40  PIT2_Init
      28  __NVIC_EnableIRQ
      38  __NVIC_SetPriority
       4  pit0_time
       4  pit1_time
       4  pit1_time_tmp
       4  time_us

 
    16 bytes in section .bss
    40 bytes in section .rodata
 1 002 bytes in section .text
 
 1 002 bytes of CODE  memory
    40 bytes of CONST memory
    16 bytes of DATA  memory

Errors: none
Warnings: 2
